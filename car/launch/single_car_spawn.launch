<?xml version="1.0" encoding="UTF-8"?>
<launch>

	<arg name="x" default="0.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="0.0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <arg name="ID" default="1"/>
    <arg name="config_file" default="car_config.yaml"/>
    <arg name="robot_name" default="car"/>
    <arg name="namespace" default=""/>
	<arg name="urdf_robot_file" default="$(find car)/urdf/car.xacro"/>

        <rosparam file="$(find car)/config/$(arg config_file)" command="load"/>
        <!--ns must corresponds to namespace in the .yaml-->
        <node name="$(arg namespace)_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" ns="controller" args="joint_state rear_right_velocity rear_left_velocity front_right_steering front_left_steering number_steering"/>
        
        <!--allows you to publish the state of a robot to tf-->
        <!--<node name="$(arg robot_name)$(arg ID)_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            respawn="true" output="screen">
            <remap from="/joint_states" to="$(arg robot_name)$(arg ID)/joint_states" />
        </node>    -->

    <!-- spawn car -->
    <param name="robot_description" command="$(find xacro)/xacro '$(arg urdf_robot_file)' roboname:='$(arg namespace)/controller' --inorder" />
	<node name="$(arg robot_name)_$(arg ID)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y) -model $(arg robot_name)_$(arg ID) -param robot_description"/>

</launch>
